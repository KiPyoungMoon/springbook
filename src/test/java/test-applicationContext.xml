<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
    
    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost/test"></property>
        <property name="username" value="root"></property>
        <property name="password" value="ansrlvud1!"></property>
    </bean>

    <bean id="userDao" class="springbook.user.dao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource"></property>
        <property name="sqlService" ref="sqlService"></property>
    </bean>

    <bean id="sqlService" class="springbook.sql.impl.SimpleSqlServiceImpl">
        <property name="sqlMap">
            <map>
                <entry key="userAdd" value="insert into users(id, name, password, level, login, recommand, email) values (?,?,?,?,?,?,?)" />
                <entry key="userGet" value="select * from users where id = ?" />
                <entry key="userGetAll" value="select * from users order by name" />
                <entry key="userDelete" value="delete from users" />
                <entry key="userCount" value="select count(id) as cnt from users" />
                <entry key="userUpdate" value="update users set name = ?, password = ?, level = ?, login = ?, recommand = ?, email = ? where id = ?" />
            </map>
        </property>
    </bean>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

    <bean id="userService" class="springbook.user.service.impl.UserServiceImpl">
        <property name="userDao" ref="userDao"></property>
        <property name="userLevelPolicy" ref="currentUserLevelPolicy"></property>
    </bean>

    <bean id="testUserService" class="springbook.user.service.UserServiceTest$TestUserService" parent="userService" />

    <bean id="currentUserLevelPolicy" class="springbook.user.service.impl.CurrentUserLevelPolicy">
        <property name="userDao" ref="userDao"></property>
        <property name="mailSender" ref="mailSender"></property>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>    
    </bean>

    <bean id="mailSender" class="springbook.user.service.impl.DumiMailSender"></bean>

    <aop:config>
        <aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Service)" />
    </aop:config>

    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" propagation="REQUIRED" read-only="true" timeout="30" /> 
            <tx:method name="*" propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>
</beans>
